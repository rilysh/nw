#[allow(dead_code)]
pub enum AnsiColor {
    Black,
    Red,
    Green,
    Yellow,
    Blue,
    Purple,
    Cyan,
    White,
    DBlack,
    DRed,
    DGreen,
    DYellow,
    DBlue,
    DPurple,
    DCyan,
    DWhite,
    LRed,
    LGreen,
    LYellow,
    LBlue,
    LPurple,
    LCyan,
    LWhite,
    Italic,
    Underline,
    None,
}

pub fn add_color<'a>(color: AnsiColor) -> &'a str {
    match color {
        AnsiColor::Black => "\x1b[0;30m",
        AnsiColor::Red => "\x1b[0;31m",
        AnsiColor::Green => "\x1b[0;32m",
        AnsiColor::Yellow => "\x1b[0;33m",
        AnsiColor::Blue => "\x1b[0;34m",
        AnsiColor::Purple => "\x1b[0;35m",
        AnsiColor::Cyan => "\x1b[0;36m",
        AnsiColor::White => "\x1b[0;37m",
        AnsiColor::DBlack => "\x1b[1;90m",
        AnsiColor::DRed => "\x1b[1;91m",
        AnsiColor::DGreen => "\x1b[1;92m",
        AnsiColor::DYellow => "\x1b[1;93m",
        AnsiColor::DBlue => "\x1b[1;94m",
        AnsiColor::DPurple => "\x1b[1;95m",
        AnsiColor::DCyan => "\x1b[1;96m",
        AnsiColor::DWhite => "\x1b[1;97m",
        AnsiColor::LRed => "\x1b[0;91m",
        AnsiColor::LGreen => "\x1b[0;92m",
        AnsiColor::LYellow => "\x1b[0;93m",
        AnsiColor::LBlue => "\x1b[0;94m",
        AnsiColor::LPurple => "\x1b[0;95m",
        AnsiColor::LCyan => "\x1b[0;96m",
        AnsiColor::LWhite => "\x1b[0;97m",
        AnsiColor::Italic => "\x1b[3m",
        AnsiColor::Underline => "\x1b[4m",
        AnsiColor::None => "\x1b[0m",
    }
}
